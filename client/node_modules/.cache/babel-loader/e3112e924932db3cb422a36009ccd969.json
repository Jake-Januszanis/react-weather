{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\react-weather\\\\client\\\\src\\\\components\\\\update-forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherDisplay from \"../component/weatherDisplay\";\n\nfunction CurrentForecast() {\n  _s();\n\n  const [state, setState] = useState({\n    temp: '',\n    name: '',\n    description: '',\n    humidity: '',\n    wind: ''\n  });\n\n  const callBackendAPI = async () => {\n    const response = await fetch('/current-forecast');\n    const body = await response.json();\n\n    if (body.status !== 200) {\n      console.log(body.message);\n    }\n\n    console.log(`City: ${body.name}, Temp: ${body.main.temp}, Wind:${body.wind.speed}`);\n    return body;\n  };\n\n  useEffect(() => {\n    callBackendAPI().then(res => setState({\n      temp: res.main.temp,\n      name: res.name,\n      description: res.weather[0].description,\n      humidity: res.main.humidity,\n      wind: res.wind.speed\n    })).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      weather: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrentForecast, \"Bo84hbfoEGfjEEIaDDLvEyV9Yh8=\");\n\n_c = CurrentForecast;\nexport default CurrentForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentForecast\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/react-weather/client/src/components/update-forecast.js"],"names":["React","useState","useEffect","WeatherDisplay","CurrentForecast","state","setState","temp","name","description","humidity","wind","callBackendAPI","response","fetch","body","json","status","console","log","message","main","speed","then","res","weather","catch","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,SAASC,eAAT,GAA4B;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAC/BM,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,IAAI,EAAE,EAFyB;AAG/BC,IAAAA,WAAW,EAAE,EAHkB;AAI/BC,IAAAA,QAAQ,EAAE,EAJqB;AAK/BC,IAAAA,IAAI,EAAE;AALyB,GAAD,CAAlC;;AAQA,QAAMC,cAAc,GAAG,YAAW;AAC9B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,QAAGD,IAAI,CAACE,MAAL,KAAgB,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,OAAjB;AACD;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQJ,IAAI,CAACP,IAAK,WAAUO,IAAI,CAACM,IAAL,CAAUd,IAAK,UAASQ,IAAI,CAACJ,IAAL,CAAUW,KAAM,EAAjF;AACA,WAAOP,IAAP;AACH,GARD;;AASIb,EAAAA,SAAS,CAAC,MAAK;AACXU,IAAAA,cAAc,GACTW,IADL,CACUC,GAAG,IAAIlB,QAAQ,CAAC;AAClBC,MAAAA,IAAI,EAAEiB,GAAG,CAACH,IAAJ,CAASd,IADG;AAElBC,MAAAA,IAAI,EAAEgB,GAAG,CAAChB,IAFQ;AAGlBC,MAAAA,WAAW,EAAEe,GAAG,CAACC,OAAJ,CAAY,CAAZ,EAAehB,WAHV;AAIlBC,MAAAA,QAAQ,EAAEc,GAAG,CAACH,IAAJ,CAASX,QAJD;AAKlBC,MAAAA,IAAI,EAAEa,GAAG,CAACb,IAAJ,CAASW;AALG,KAAD,CADzB,EAQKI,KARL,CAQWC,KAAK,IAAIT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CARpB;AASK,GAVA,EAUE,EAVF,CAAT;AAYJ,sBACI;AAAA,2BACI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEtB;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnCQD,e;;KAAAA,e;AAqCT,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport WeatherDisplay from \"../component/weatherDisplay\";\r\n\r\nfunction CurrentForecast () {\r\n    const [state, setState] = useState({\r\n        temp: '',\r\n        name: '',\r\n        description: '',\r\n        humidity: '',\r\n        wind: ''\r\n    }) \r\n\r\n    const callBackendAPI = async() => {\r\n        const response = await fetch('/current-forecast');\r\n        const body = await response.json();\r\n        if(body.status !== 200) {\r\n          console.log(body.message)\r\n        }\r\n        console.log(`City: ${body.name}, Temp: ${body.main.temp}, Wind:${body.wind.speed}`)\r\n        return body;\r\n    }\r\n        useEffect(()=> {\r\n            callBackendAPI()\r\n                .then(res => setState({\r\n                    temp: res.main.temp,\r\n                    name: res.name,\r\n                    description: res.weather[0].description,\r\n                    humidity: res.main.humidity,\r\n                    wind: res.wind.speed\r\n                }))\r\n                .catch(error => console.log(error));\r\n                }, [])\r\n\r\n    return(\r\n        <div>\r\n            <WeatherDisplay weather={state}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentForecast; "]},"metadata":{},"sourceType":"module"}