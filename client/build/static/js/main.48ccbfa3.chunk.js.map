{"version":3,"sources":["components/form.js","components/button.js","components/weather-display.js","components/update-forecast.js","components/error.js","components/App.js","reportWebVitals.js","index.js"],"names":["Form","className","method","action","type","name","required","Button","WeatherDisplay","props","console","log","weather","dataLoaded","placeholder","Math","round","temp","description","humidity","wind","CurrentForecast","useState","state","setState","callBackendAPI","a","fetch","response","json","body","status","message","main","speed","useEffect","then","res","catch","error","Error","App","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAgBeA,MAdf,WAEI,OACI,8BACI,uBAAMC,UAAU,oDAAoDC,OAAO,OAAOC,OAAO,IAAzF,UACI,uBAAOF,UAAU,8BAAjB,mCACA,uBAAOA,UAAU,yHAAyHG,KAAK,SAASC,KAAK,UAAUC,UAAQ,IAC/K,wBAAQL,UAAU,0GAA2GG,KAAK,SAAlI,iC,gDCADG,MAPf,WAEI,OACI,wBAAQN,UAAU,yFAA0FG,KAAK,SAAjH,gBCyBOI,EA3BQ,SAACC,GAGpB,OADAC,QAAQC,IAAIF,EAAMG,SACc,GAA5BH,EAAMG,QAAQC,WAEd,sBAAKZ,UAAU,8BAAf,UACA,uBAAMA,UAAU,mCAAmCC,OAAO,OAAOC,OAAO,IAAxE,UACA,uBAAOF,UAAU,oIAAoIG,KAAK,SAASC,KAAK,UAAUS,YAAY,uBAAuBR,UAAQ,IAC7N,cAAC,EAAD,OAEA,sBAAKL,UAAU,yFAAf,UAEA,oBAAIA,UAAU,8BAAd,+BACA,oBAAIA,UAAU,2BAAd,SAA0CQ,EAAMG,QAAQP,OACxD,qBAAIJ,UAAU,qBAAd,UAAoCc,KAAKC,MAAMP,EAAMG,QAAQK,MAA7D,WACA,oBAAIhB,UAAU,UAAd,SAAyBQ,EAAMG,QAAQM,cACvC,qBAAIjB,UAAU,gBAAd,UAA8B,sBAAMA,UAAU,YAAhB,uBAA9B,IAA4EQ,EAAMG,QAAQO,SAA1F,OACA,qBAAIlB,UAAU,gBAAd,UAA8B,sBAAMA,UAAU,YAAhB,mBAA9B,IAAwEQ,EAAMG,QAAQQ,KAAtF,gBAMA,wDCiBOC,MAxCf,WAA6B,IAAD,EACEC,mBAAS,CAC/BL,KAAM,GACNZ,KAAM,GACNa,YAAa,GACbC,SAAU,GACVC,KAAM,GACNP,YAAY,IAPQ,mBACjBU,EADiB,KACVC,EADU,KAUlBC,EAAc,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,qBADV,cACbC,EADa,gBAEAA,EAASC,OAFT,cAGA,OADbC,EAFa,QAGXC,QACNrB,QAAQC,IAAImB,EAAKE,SAEnBtB,QAAQC,IAAR,gBAAqBmB,EAAKzB,KAA1B,mBAAyCyB,EAAKG,KAAKhB,KAAnD,kBAAiEa,EAAKV,KAAKc,QANxD,kBAOZJ,GAPY,2CAAH,qDAuBpB,OAdIK,qBAAU,WACNV,IACKW,MAAK,SAAAC,GAAG,OAAIb,EAAS,CAClBP,KAAMoB,EAAIJ,KAAKhB,KACfZ,KAAMgC,EAAIhC,KACVa,YAAamB,EAAIzB,QAAQ,GAAGM,YAC5BC,SAAUkB,EAAIJ,KAAKd,SACnBC,KAAMiB,EAAIjB,KAAKc,MACfrB,YAAY,OAGfyB,OAAM,SAAAC,GAAK,OAAI7B,QAAQC,IAAI4B,QACzB,IAGX,8BACI,cAAC,EAAD,CAAgB3B,QAASW,OC7BtBiB,MANf,WACI,OACI,2FCuCOC,MAlCf,WACE,OAEE,eAAC,IAAD,WAEA,oBAAIxC,UAAU,iDAAd,6BAGI,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,oBAAlB,SACI,cAAC,EAAD,MAGA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAAlB,SACE,cAAC,EAAD,SAIN,cAAC,IAAD,CAAMC,GAAI,IAAV,SAAc,oBAAI3C,UAAU,mCAAd,oBACd,6BC1BO4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.48ccbfa3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Form () {\r\n\r\n    return(\r\n        <div>\r\n            <form className=\"h-auto flex flex-col justify-between items-center\" method=\"POST\" action=\"/\">\r\n                <label className=\"text-4xl mb-6 text-gray-600\">Enter 5 digit zipcode</label>\r\n                <input className=\"w-6/12 h-7 block pl-2 mb-4 sm:text-sm border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:border-blue-300\" type='number' name='zipcode' required></input>\r\n                <button className=\"w-3/12 h-8 mb-8 text-white text-sm md:text-xl block shadow-md rounded-2xl bg-blue-500 hover:bg-blue-700\"  type=\"submit\">Check Weather</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nfunction Button () {\r\n    \r\n    return(\r\n        <button className=\"w-8 h-8 mb-4 ml-2 text-white block shadow-md rounded-2xl bg-blue-500 hover:bg-blue-700\"  type=\"submit\">?</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from \"./button\";\r\n\r\nconst WeatherDisplay = (props) => {\r\n    \r\n    console.log(props.weather)\r\n    if (props.weather.dataLoaded == true){\r\n    return(\r\n        <div className=\"weather-display text-center\">\r\n        <form className=\"flex justify-center items-center\" method=\"POST\" action=\"/\">\r\n        <input className=\"inline w-2/3 h-8 block pl-2 mb-4 ml-8 sm:text-sm border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:border-blue-300\" type='number' name='zipcode' placeholder=\"Enter new zipcode...\" required></input>\r\n        <Button />\r\n        </form>\r\n        <div className=\"weather-display-container text-center text-gray-700 flex-col justify-around mb-40 mt-5\">\r\n        \r\n        <h1 className=\"text-2xl font-semibold mb-1\">Current Weather: </h1>\r\n        <h1 className=\"text-xl font-medium mb-1\">{props.weather.name}</h1>\r\n        <h2 className=\"text-6xl font-bold\">{Math.round(props.weather.temp)}&#176;F</h2>\r\n        <h3 className=\"text-xl\">{props.weather.description}</h3>\r\n        <h4 className=\"font-semibold\"><span className=\"font-bold\">Humidity:</span> {props.weather.humidity}%</h4>\r\n        <h5 className=\"font-semibold\"><span className=\"font-bold\">Wind:</span> {props.weather.wind} mph</h5>\r\n        </div>\r\n        </div>\r\n    )\r\n} else {\r\n    return(\r\n        <h1>Loading...please wait</h1>\r\n    )\r\n}}\r\n\r\nexport default WeatherDisplay;","import React, { useState, useEffect } from \"react\";\r\nimport WeatherDisplay from \"./weather-display\";\r\n\r\nfunction CurrentForecast () {\r\n    const [state, setState] = useState({\r\n        temp: '',\r\n        name: '',\r\n        description: '',\r\n        humidity: '',\r\n        wind: '',\r\n        dataLoaded: false\r\n    }) \r\n\r\n    const callBackendAPI = async() => {\r\n        const response = await fetch('/current-forecast');\r\n        const body = await response.json();\r\n        if(body.status !== 200) {\r\n          console.log(body.message)\r\n        }\r\n        console.log(`City: ${body.name}, Temp: ${body.main.temp}, Wind:${body.wind.speed}`)\r\n        return body;\r\n    }\r\n        useEffect(()=> {\r\n            callBackendAPI()\r\n                .then(res => setState({\r\n                    temp: res.main.temp,\r\n                    name: res.name,\r\n                    description: res.weather[0].description,\r\n                    humidity: res.main.humidity,\r\n                    wind: res.wind.speed,\r\n                    dataLoaded: true\r\n\r\n                }))\r\n                .catch(error => console.log(error));\r\n                }, [])\r\n\r\n    return(\r\n        <div>\r\n            <WeatherDisplay weather={state}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentForecast; ","import React from 'react';\r\n\r\n\r\nfunction Error() {\r\n    return(\r\n        <h1>Ooops looks like something went wrong. Please try again.</h1>\r\n    )\r\n}\r\n\r\nexport default Error;","\nimport \"../../src/tailwind.output.css\";\nimport Form from \"./form\"\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport CurrentForecast from \"./update-forecast\"\nimport Error from \"./error\"\nimport WeatherDisplay from \"./weather-display\";\n\n\n\nfunction App() {\n  return (\n\n    <Router>\n\n    <h1 className=\"text-6xl text-blue-700 text-center italic mb-6\">Express Weather</h1>\n    \n\n        <Switch>\n        \n        <Route exact path=\"/current-forecast\">\n            <CurrentForecast />\n        </Route>\n        \n            <Route exact path=\"/\">\n                <Form />\n            </Route>\n\n            <Route exact path=\"/error\">\n              <Error />\n            </Route>\n\n            <Route exact path=\"/weather-display\">\n              <WeatherDisplay />\n            </Route>\n\n        </Switch>\n        <Link to =\"/\"><h1 className=\"text-4xl text-center bg-gray-200\">Home</h1></Link>\n        <span></span>\n    </Router>\n\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"../src/tailwind.output.css\"\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}